{% extends 'lbook/default/index.html.twig' %}
{% block title %}LBOOK Cycles list{% endblock %}
{% block content %}

    {#<div class="row">#}
        {#<div class="col-xs-12">#}
            {#{% include "lbook/search.html.twig" %}#}
        {#</div>#}
    {#</div>#}

    {% set pagePath = "cycle_index" %}
    {% include "lbook/paginator.html.twig" %}
<div id="container">
    <div class="row">
        <div id="cycleIndexToolbar" class="cycleIndexToolbar">
            <table class="records_list table table-hover">
                <tr>
                    <td><h5 class="generic_title">Cycle list</h5></td>
                    <td>
                        <span style="float: right;">Count:{{ size }}<i class="fa fa-flag blue bigger-130"></i>&nbsp;</span>
                    </td>
                </tr>
            </table>
            {#<div class="form-inline" role="form">#}
                {#<div class="form-group">#}
                    {#<span>Offset: </span>#}
                    {#<input name="offset" class="form-control w70" type="number" value="0"/>#}
                {#</div>#}
                {#<div class="form-group">#}
                    {#<span>Limit: </span>#}
                    {#<input name="limit" class="form-control w70" type="number" value="5"/>#}
                {#</div>#}
                {#<div class="form-group">#}
                    {#<input name="search" class="form-control" type="text" placeholder="Search">#}
                {#</div>#}
                {#<button id="ok" type="submit" class="btn btn-default">OK</button>#}
            {#</div>#}
        </div>
        {% apply spaceless %}
        <table class="records_list table table-striped table-condensed table-hover" data-classes="table table-no-bordered" id="cycle_index_table"
               data-pagination="true"
               data-search="true"
               data-toggle="table"
               data-show-columns="true"
               data-show-refresh="true"
               {#data-show-toggle="true"#}
               data-response-handler="responseHandler"
               data-query-params="queryParams"
               {#data-height="800"#}
               {#data-side-pagination="client"#}
               data-row-style="rowStyle"
               data-show-footer="true"
               data-detail-view="true"
               data-detail-formatter="detailFormatter"
               data-show-export="true"
               data-toolbar="#cycleIndexToolbar"
               data-page-size="30" data-page-list="[20, 25, 30, 50, 100, 300, 500, 1000, 'ALL']" data-sort-order="desc">
            <thead>
            <tr>
                <th data-field="TimeDiff" data-sortable="true" title="Updated image" class="time_diff_icon" data-switchable="false"></th>
                <th data-field="id" data-sortable="true" data-switchable="false" title="Cycle ID">ID</th>
                <th data-field="CycleName" data-sorter="htmlSorter" data-sortable="true" title="Full setup name" data-switchable="false" data-title="Cycle Name"  data-cell-style="cellStyle">Cycle Name</th>
                <th data-field="Setup" data-sorter="htmlSorter" data-sortable="true" title="Setup Name">Setup</th>
                <th data-field="Tests" data-sortable="true" title="Tests count in the cycle" data-formatter="testsFormatter" data-footer-formatter="sumFormatter">Tests</th>
                <th data-field="PassRate" data-sorter="dataPercentSorter" data-sortable="true" title="Pass Rate" data-footer-formatter="avgPercentFormatter">PR</th>
                <th data-field="Build" data-sortable="true" data-sorter="htmlSorter" title="Build Name" data-footer-formatter="totalFormatter">Build</th>
                <th data-field="Status" data-sortable="true" title="Status" class="cycle_index_status" data-formatter="statusCellStyle">Status</th>
                <th data-field="User" data-sortable="true" title="User Name">User</th>
                {#<th data-field="CTRL" data-sortable="true" data-visible="false" title="Controller">Controller</th>#}
                {#<th data-field="DUT" data-sortable="true" data-visible="false" title="Device Under Tests">DUT</th>#}
                <th data-field="Uploader" data-sortable="true" title="Cycle Uploader Machine" data-formatter="colorFormatter" data-footer-formatter="runningFormatter">Uploader</th>
                <th data-field="Duration" data-sorter="dataTitleIntSorter" data-sortable="true" title="Time duration between First test start-time and Last test end-time" data-footer-formatter="timeSumFormatter">Duration</th>
                <th data-field="TestTime" data-sorter="dataTitleIntSorter" data-sortable="true" data-footer-formatter="timeSumFormatter">Test time</th>
                {#<th data-field="Created" data-sorter="dataTitleDateSorter" data-sortable="true" title="Created time" data-visible="false">Created</th>#}
                <th data-field="Updated" data-sorter="dataTitleDateSorter" data-sortable="true" title="Update time">Updated</th>
                <th data-field="options" class="setup_cycle_options_column" data-switchable="false" title="Option">O</th>
            </tr>
            </thead>
            <tbody class="searchable">
            {% for cycle in iterator | slice(0, 10000) %}
                <tr>
                    <td>{%  if date(cycle.updatedAt) > date('-30minutes') %}<i class="normal-icon ace-icon fa fa-clock-o pink bigger-130"></i>{% endif %}</td>
                    <td>{{ cycle.id }}</td>
                    <td title="{{ cycle.name }}"><a href="{{ path('cycle_show_first', { 'id': cycle.id }) }}">{{ shortString(cycle.name, 35, "...") }}</a></td>
                    <td title="{{ cycle.setup }}"><a href="{{ path('setup_show_first', { 'id': cycle.setup.id  }) }}">{{ shortString(cycle.setup, 35, "...") }}</a></td>
                    <td>{{ cycle.testsCount }}</td>
                    {#<td>{{ cycle.tests | length }}</td>#}
                    <td><span class="{{ passRateToColor(cycle.passRate) }}" data-percent="{{ cycle.passRate }}">{{ cycle.passRate }}%</span></td>
                    <td title="{{ cycle.build }}">{% if cycle.build.id is defined %}<a href="{{ path('build_show_cycles_first', { 'id': cycle.build.id }) }}">{{ shortString(cycle.build, 35, "...") }}</a>{% endif %}</td>
                    <td>{{ cycle.passRate }}:{{ cycle.errorRate }}:{{ cycle.failRate }}:{{ cycle.warningRate }}:{{ cycle.unknownRate }}:{{ cycle.naRate }}</td>
                    <td title="{{ cycle.user.fullName }}">{{ cycle.user.userNameMedium}}</td>
                    {#<td>{{ cycle.controller }}</td>#}
                    {#<td>{{ cycle.dut }}</td>#}
                    <td nowrap>{{ cycle.targetUploader }}</td>
                    <td><span data-title="{{ cycle.period}}">{{ cycle.period |  executionTimeGenericShort}}</span></td>
                    <td><span data-title="{{ cycle.testsTimeSum}}">{{ cycle.testsTimeSum |  executionTimeGenericShort}}</span></td>
                    {#<td><span data-title="{{ cycle.createdAt|date('ymdHis') }}" title="Created [{{ cycle.createdAt |date('d/m/Y H:i:s') }}]">{{ cycle.createdAt|time_diff}}</span></td>#}
                    <td nowrap><span data-title="{{ cycle.updatedAt|date('ymdHis') }}" title="Updated [{{ cycle.updatedAt |date('d/m/Y H:i:s') }}]">{{ cycle.updatedAt|time_diff}}</span></td>
                    <td>{% if is_granted('edit', cycle.setup) %}<a href="{{ path('cycle_edit', { 'id': cycle.id }) }}">edit</a>{% endif %}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
</div>
    <script>

        function testsFormatter(value, row) {
            var icon = parseInt(row.id) % 2 === 0 ? 'glyphicon-star' : 'glyphicon-star-empty'
            return '<i class="glyphicon ' + icon + '"></i>' + value;
        }

        function colorFormatter(value) {
            var src_value = value;
            value = value.split('.').reverse().join('');
            if (value === '') {
                return '';
            }
            var parsed_value = parseFloat(value);
            //console.log(parsed_value);
            if (isNaN(parsed_value)){
                var str_len = value.toString().length;
                parsed_value = parseFloat(( str_len * 11 * str_len * Math.sqrt(str_len) ).toString());
                //console.log(parsed_value);
            }
            var st = Math.floor((parsed_value * 7) % 6777215).toString(16);
            var color = '#'+ st.substring(0, 6);
            //console.log(color);
            return '<div style="color:' + color + '"><i class="fa fa-laptop"></i>' + src_value + '</div>';
        }

        function detailFormatter(index, row, object){
            var html = [];
            var url = "/cycle/ajax/" + row['id'];
            var p = $.post(url , function( data ) {
                html.push(data);
            });
            p.done(function(data) {
                object.html(data);
                return data;
            });
            p.fail(function(data, error_type, error_message) {
                var msg = error_type + ':' + error_message;
                object.html(msg);
                console.log(msg);
            });
        }

        function cellStyle(value, row, index) {
            // var classes = ['active', 'success', 'info', 'warning', 'danger'];
            // //console.log(value);
            // if (index % 2 === 0 && index / 2 < classes.length) {
            //     return {
            //         classes: classes[index / 2]
            //     };
            // }
            return {};
        }

        function rowStyle(row, index) {
            var classes = ['active', 'success', 'info', 'warning', 'danger'];

            var pass_rate = extractDataPercent(row['PassRate']);
            // if (pass_rate === 100) {
            //     return {
            //         classes: classes[1]
            //     };
            // }
            if (pass_rate === 0) {
                return {
                    classes: classes[4]
                };
            }
            if (pass_rate < 50) {
                return {
                    classes: classes[3]
                };
            }
            return {};
        }

        var table = $('#cycle_index_table'),
            ok = $('#ok');
        // $(function () {
        //     ok.keyup(function () {
        //         table.bootstrapTable('refresh');
        //     });
        // });

        function queryParams() {
            console.log('HERE');
            var params = {};
            $('#cycleIndexToolbar').find('input[name]').each(function () {
                params[$(this).attr('name')] = $(this).val();
            });
            return params;
        }

        function responseHandler(res) {
            console.log(res);
            return res.rows;
        }
    </script>
    {% endapply %}
    <ul>
        <li>
            <a href="{{ path('cycle_new') }}">Create a new Cycle</a>
        </li>
    </ul>

    <script>
        $(document).ready(function() {
            $( "#cycleIndexToolbar, button[name = 'refresh'].btn" ).bind( "click", function() {
                location.reload();
            });
            try {
                ace.settings.sidebar_collapsed(document.getElementById('sidebar'), true, true);
                ace.settings.sidebar_fixed(document.getElementById('sidebar'), true, true);
            } catch (e) {}


        });

        $(document).ready(function(){
            $(".cycle_index_table").bootstrapTable({
                showFullscreen: true,
            });
        });
    </script>
{% endblock %}
